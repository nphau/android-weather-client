apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-android-extensions'
apply from: '../android_sonarqube.gradle'
apply from: '../artifacts.gradle'
apply from: '../shared_dependencies.gradle'

android {

    compileSdkVersion build_versions.target_sdk

    defaultConfig {
        applicationId "au.com.nab.android"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        resConfigs "en", "vi"
    }
    signingConfigs {
        release {
            keyAlias KEY_ALIAS
            keyPassword KEYSTORE_PASSWORD
            storeFile file(KEY_FILE)
            storePassword KEYSTORE_PASSWORD
        }
        debug {
            keyAlias KEY_ALIAS_DEBUG
            keyPassword KEYSTORE_PASSWORD_DEBUG
            storeFile file(KEY_FILE_DEBUG)
            storePassword KEYSTORE_PASSWORD_DEBUG
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            debuggable false
            shrinkResources true
            resValue("string", "app_name", "Android Weather Client")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            debuggable true
            shrinkResources false
            applicationIdSuffix ".dev"
            resValue("string", "app_name", "Android Weather Client DEV")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    androidExtensions {
        experimental = true
    }
    // For kotlin debug
    kapt {
        javacOptions {
            option("-Xmaxerrs", 2000)
        }
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    externalNativeBuild {
        cmake {
            path "../nab-data/CMakeLists.txt"
        }
    }
}

dependencies {
    implementation project(path: ':nab-shared')
    implementation project(path: ':nab-domain')
    implementation project(path: ':nab-data')
}